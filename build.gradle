buildscript {
    ext {
        springBootVersion = '2.2.6.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id "com.palantir.docker" version "0.25.0"
}

group 'mcorp'
version '1.0.0'

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

sourceCompatibility = 14
targetCompatibility = 14

repositories {
    mavenCentral()
}

configurations {
    providedRuntime
    implementation.exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
    implementation.exclude group: "org.springframework.boot", module: "spring-boot-starter-tomcat"
}

dependencies {
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-undertow'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
    implementation group: 'org.postgresql', name: 'postgresql'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-log4j2'
    implementation group: 'javax.servlet', name: 'jstl'

    implementation group: 'org.jsoup', name: 'jsoup', version: '1.11.1'
    compileOnly group: 'org.projectlombok', name: 'lombok'
    annotationProcessor group: 'org.projectlombok', name: 'lombok'
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper:9.0.17'
    implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation('org.junit.jupiter:junit-jupiter-api')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine')
    testRuntimeOnly('org.junit.vintage:junit-vintage-engine')
    testImplementation('org.junit.platform:junit-platform-commons')
    testCompile group: 'org.mockito', name: 'mockito-junit-jupiter'
    testCompile group: 'org.mockito', name: 'mockito-core'

}

test{
    useJUnitPlatform()
    dependsOn 'cleanTest'
    testLogging {
        events "passed", "skipped", "failed"
    }
}

docker {
    dependsOn clean
    dependsOn bootJar
    name "boot/${jar.archiveBaseName.get()}"
    tag "${project.name}", "boot/${jar.archiveBaseName.get()}:${project.version}"
    files jar.archiveFile.get()
    dockerfile file('Dockerfile')
    buildArgs(['ARTIFACT': "${jar.archiveFileName.get()}"])
}